steps:
  # Retrieve secrets based on branch name
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        gcloud secrets versions access latest --secret="serviceAccountKey" > serviceAccountKey.json
        if [[ "$BRANCH_NAME" == "develop" ]]; then
          gcloud secrets versions access latest --secret="application-dev" > application-dev.yml
        elif [[ "$BRANCH_NAME" == "main" ]]; then
          gcloud secrets versions access latest --secret="application-prod" > application-prod.yml
        else
          echo "Invalid branch for deployment" && exit 1
        fi

  # Determine Dockerfile to use based on branch name
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        if [[ "$BRANCH_NAME" == "main" ]]; then 
          cp Dockerfile.prod Dockerfile; 
        elif [[ "$BRANCH_NAME" == "develop" ]]; then 
          cp Dockerfile.dev Dockerfile; 
        else 
          echo "Invalid branch for deployment" && exit 1; 
        fi

  # Build the container image
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '-t'
      - 'us-central1-docker.pkg.dev/mono-dev/cloud-run-source-deploy/mono-be:$COMMIT_SHA'
      - '-f'
      - 'Dockerfile'
      - '.'

  # Push the container image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'push',
      'us-central1-docker.pkg.dev/mono-dev/cloud-run-source-deploy/mono-be:$COMMIT_SHA'
    ]

  # Deploy container image to Cloud Run
  - name: 'gcr.io/cloud-builders/gcloud'
    args: [
      'run',
      'deploy',
      'mono-be',
      '--platform=managed',
      '--image',
      'us-central1-docker.pkg.dev/mono-dev/cloud-run-source-deploy/mono-be:$COMMIT_SHA',
      '--region',
      'us-central1',
      '--allow-unauthenticated',
      '--verbosity=debug'
    ]

images:
  - 'us-central1-docker.pkg.dev/mono-dev/cloud-run-source-deploy/mono-be:$COMMIT_SHA'

options:
  logging: CLOUD_LOGGING_ONLY
